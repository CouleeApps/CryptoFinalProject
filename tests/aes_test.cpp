#include "../ssl/common.h"
#include "../ssl/aes.h"

//i'm just going to ignore the fact that i can go over 128 bit keys
int main(int argc, char** argv){
	//16 byte (ASCII characters) - convert to 128 bit array
	uint8_t message[16] = {0x0, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88,
        0x99, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF};
	//uint8_t message[16] = {0x32, 0x43, 0xf6, 0xa8, 0x88, 0x5a, 0x30, 0x8d, 0x31
    //  0x31, 0x98, 0xa2, 0xe0, 0x37, 0x7, 0x34};
	//uint8_t key[16] = {0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab,
    //  0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c};
	uint8_t key[16] = {0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa,
        0xb, 0xc, 0xd, 0xe, 0xf};
	// uint8_t cipher[16] = {0x69, 0xc4, 0xe0, 0xd8, 0x6a, 0x7b, 0x4, 0x30, 0xd8,
    //    0xcd, 0xb7, 0x80, 0x70, 0xb4, 0xc5, 0x5a};

    std::vector<uint8_t> cipher = aes_encrypt(message, key);
    std::vector<uint8_t> result = aes_decrypt(cipher.data(), key);
	for(size_t i = 0; i < result.size(); i++){
		printf("%x ", result[i]);
	}
    printf("\n");
}

